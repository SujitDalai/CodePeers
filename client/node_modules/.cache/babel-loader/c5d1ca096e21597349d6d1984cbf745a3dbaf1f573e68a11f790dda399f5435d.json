{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujit\\\\Downloads\\\\dev-book-master\\\\dev-book-master\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = _ref => {\n  _s();\n  let {\n    username,\n    getGithubRepos,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"text-primary my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fab fa-github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), \" Github Repos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"repo bg-white my-1 p-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"badge badge-light\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["useEffect","PropTypes","connect","getGithubRepos","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"sources":["C:/Users/sujit/Downloads/dev-book-master/dev-book-master/client/src/components/profile/ProfileGithub.js"],"sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n\n  return (\n    <div class='profile-github'>\n      <h2 class='text-primary my-1'>\n        <i class='fab fa-github'></i> Github Repos\n      </h2>\n\n      {repos.map((repo) => (\n        <div key={repo._id} class='repo bg-white my-1 p-1'>\n          <div>\n            <h4>\n              <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                {repo.name}\n              </a>\n            </h4>\n\n            <p>{repo.description}</p>\n          </div>\n\n          <div>\n            <ul>\n              <li class='badge badge-primary'>\n                Stars: {repo.stargazers_count}\n              </li>\n\n              <li class='badge badge-dark'>Watchers: {repo.watchers_count}</li>\n\n              <li class='badge badge-light'>Forks: {repo.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ repos: state.profile.repos });\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AAErC,SAASC,cAAc,QAAQ,uBAAuB;AAAC;AAEvD,MAAMC,aAAa,GAAG,QAAyC;EAAA;EAAA,IAAxC;IAAEC,QAAQ;IAAEF,cAAc;IAAEG;EAAM,CAAC;EACxDN,SAAS,CAAC,MAAM;IACdG,cAAc,CAACE,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACF,cAAc,EAAEE,QAAQ,CAAC,CAAC;EAE9B,oBACE;IAAK,KAAK,EAAC,gBAAgB;IAAA,wBACzB;MAAI,KAAK,EAAC,mBAAmB;MAAA,wBAC3B;QAAG,KAAK,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1B,EAEJC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACd;MAAoB,KAAK,EAAC,wBAAwB;MAAA,wBAChD;QAAA,wBACE;UAAA,uBACE;YAAG,IAAI,EAAEA,IAAI,CAACC,QAAS;YAAC,MAAM,EAAC,QAAQ;YAAC,GAAG,EAAC,qBAAqB;YAAA,UAC9DD,IAAI,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA;QACR;UAAA;UAAA;UAAA;QAAA,QACD,eAEL;UAAA,UAAIF,IAAI,CAACG;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACrB,eAEN;QAAA,uBACE;UAAA,wBACE;YAAI,KAAK,EAAC,qBAAqB;YAAA,sBACrBH,IAAI,CAACI,gBAAgB;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1B,eAEL;YAAI,KAAK,EAAC,kBAAkB;YAAA,yBAAYJ,IAAI,CAACK,cAAc;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,eAEjE;YAAI,KAAK,EAAC,mBAAmB;YAAA,sBAASL,IAAI,CAACM,WAAW;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA;MACzD;QAAA;QAAA;QAAA;MAAA,QACD;IAAA,GArBEN,IAAI,CAACO,GAAG;MAAA;MAAA;MAAA;IAAA,QAuBnB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAtCIX,aAAa;AAAA,KAAbA,aAAa;AAwCnBA,aAAa,CAACY,SAAS,GAAG;EACxBb,cAAc,EAAEF,SAAS,CAACgB,IAAI,CAACC,UAAU;EACzCZ,KAAK,EAAEL,SAAS,CAACkB,KAAK,CAACD,UAAU;EACjCb,QAAQ,EAAEJ,SAAS,CAACmB,MAAM,CAACF;AAC7B,CAAC;AAED,MAAMG,eAAe,GAAIC,KAAK,KAAM;EAAEhB,KAAK,EAAEgB,KAAK,CAACC,OAAO,CAACjB;AAAM,CAAC,CAAC;AAEnE,eAAeJ,OAAO,CAACmB,eAAe,EAAE;EAAElB;AAAe,CAAC,CAAC,CAACC,aAAa,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}