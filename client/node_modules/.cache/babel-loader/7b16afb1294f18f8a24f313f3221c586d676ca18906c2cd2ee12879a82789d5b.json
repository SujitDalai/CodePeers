{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujit\\\\OneDrive\\\\Desktop\\\\CodePeers\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport formatDate from '../../utils/formatDate';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"post bg-white my-1 p-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar,\n        alt: \"Github DP instead of Gravatar\",\n        className: \"round-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: [\"Posted on \", formatDate(date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showActions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => addLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => removeLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${_id}`,\n        className: \"btn btn-primary\",\n        children: [\"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => deletePost(_id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\nvar _c;\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["PropTypes","Link","connect","addLike","removeLike","deletePost","formatDate","jsxDEV","_jsxDEV","Fragment","_Fragment","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","type","length","loading","_c","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/sujit/OneDrive/Desktop/CodePeers/client/src/components/posts/PostItem.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport formatDate from '../../utils/formatDate';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => (\n  <div className='post bg-white my-1 p-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img\n          src={avatar}\n          alt='Github DP instead of Gravatar'\n          className='round-img'\n        />\n\n        <h4>{name}</h4>\n      </Link>\n    </div>\n\n    <div>\n      <p className='my-1'>{text}</p>\n\n      <p className='post-date'>Posted on {formatDate(date)}</p>\n\n      {showActions && (\n        <>\n          <button\n            onClick={(e) => addLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-up' />{' '}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n\n          <button\n            onClick={(e) => removeLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-down' />\n          </button>\n\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\n            Discussion{' '}\n            {comments.length > 0 && (\n              <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={(e) => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'\n            >\n              <i className='fas fa-times' />\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth });\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}